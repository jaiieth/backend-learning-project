model category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  menu      menu[]
}

model orderItems {
  id        Int      @id @default(autoincrement())
  menuId    Int
  menu_id   menu     @relation(fields: [menuId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order_id  orders   @relation(fields: [orderId], references: [id])
  orderId   Int
}

model orders {
  id          Int          @id @default(autoincrement())
  table_id    Int
  status      String       @default("WAITING")
  order_items orderItems[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model menu {
  id         Int          @id @default(autoincrement())
  category   category     @relation(fields: [categoryId], references: [id])
  categoryId Int
  name       String?      @unique
  image      String?
  price      Int?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  items      orderItems[]
}

datasource db {
  provider = "postgresql"
  url      = env("FOODORDERING_DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "debian-openssl-1.1.x"]
  output        = "../prisma/client-food"
}
